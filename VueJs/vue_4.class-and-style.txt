1.绑定 HTML Class
 (1)对象语法
 我们可以传给 v-bind:class 一个对象，以动态地切换 class
 <div v-bind:class="{ active: isActive }"></div>
 可以在对象中传入更多属性来动态切换多个 class。此外，v-bind:class 指令也可以与普通的 class 属性共存。
   <div class="static"
        v-bind:class="{ active: isActive, 'text-danger': hasError }">
   </div>

   data: {
     isActive: true,
     hasError: false
   }
   结果渲染为：
   <div class="static active"></div>

 绑定的数据对象不必内联定义在模板里
  <div v-bind:class="classObject"></div>
  data: {
    classObject: {
      active: true,
      'text-danger': false
    }
  }
  //渲染的结果和上面一样。我们也可以在这里绑定一个返回对象的计算属性。

 可以在这里绑定一个返回对象的计算属性
 <div v-bind:class="classObject"></div>
 data: {
   isActive: true,
   error: null
 },
 computed: {
   classObject: function () {
     return {
       active: this.isActive && !this.error,
       'text-danger': this.error && this.error.type === 'fatal'
     }
   }
 }

 (2)数组语法
 可以把一个数组传给 v-bind:class，以应用一个 class 列表
   <div v-bind:class="[activeClass, errorClass]"></div>
   data: {
     activeClass: 'active',
     errorClass: 'text-danger'
   }
   渲染为：
   <div class="active text-danger"></div>

 如果你也想根据条件切换列表中的 class，可以用三元表达式：
  <div v-bind:class="[isActive ? activeClass : '', errorClass]"></div>

 在数组语法中也可以使用对象语法
  <div v-bind:class="[{ active: isActive }, errorClass]"></div>

 (3)用在组件上
 当在一个自定义组件上使用 class 属性时，这些类将被添加到该组件的根元素上面。这个元素上已经存在的类不会被覆盖。
   Vue.component('my-component', {
     template: '<p class="foo bar">Hi</p>'
   })
   <my-component class="baz boo"></my-component>
   //HTML 将被渲染为:
   <p class="foo bar baz boo">Hi</p>

 对于带数据绑定 class 也同样适用
   <my-component v-bind:class="{ active: isActive }"></my-component>
   //当 isActive 为 truthy[1] 时，HTML 将被渲染成为：
   <p class="foo bar active">Hi</p>


2.绑定内联样式
  (1)对象语法
  v-bind:style 的对象语法十分直观——看着非常像 CSS，但其实是一个 JavaScript 对象。
    <div v-bind:style="{ color: activeColor, fontSize: fontSize + 'px' }"></div>
    data: {
      activeColor: 'red',
      fontSize: 30
    }

  直接绑定到一个样式对象通常更好，这会让模板更清晰：
    <div v-bind:style="styleObject"></div>
    data: {
      styleObject: {
        color: 'red',
        fontSize: '13px'
      }
    }

  (2)数组语法
  v-bind:style 的数组语法可以将多个样式对象应用到同一个元素上：
    <div v-bind:style="[baseStyles, overridingStyles]"></div>

  (3)自动添加前缀
  当 v-bind:style 使用需要添加浏览器引擎前缀的 CSS 属性时，如 transform，Vue.js 会自动侦测并添加相应的前缀。

  (4)数组语法 2.3.0+
  从 2.3.0 起你可以为 style 绑定中的属性提供一个包含多个值的数组，常用于提供多个带前缀的值，例如：
    <div :style="{ display: ['-webkit-box', '-ms-flexbox', 'flex'] }"></div>
    //这样写只会渲染数组中最后一个被浏览器支持的值。在本例中，如果浏览器支持不带浏览器前缀的 flexbox，那么就只会渲染 display: flex。

